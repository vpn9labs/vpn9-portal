#!/usr/bin/env bash
set -euo pipefail

# VPN9 Portal Deployment Script
# This script commits any working changes and deploys with build metadata

echo "=== VPN9 Portal Deployment ==="
echo ""

# Calculate build metadata from the latest commit
BUILD_VERSION=$(git describe --tags --always 2>/dev/null || echo "v0.0.1-$(git rev-parse --short HEAD)")
BUILD_COMMIT=$(git rev-parse HEAD)
BUILD_TIMESTAMP=$(date -u '+%Y-%m-%dT%H:%M:%SZ')
SOURCE_DATE_EPOCH=$(git log -1 --format=%ct)

echo "Build Metadata:"
echo "  VERSION: ${BUILD_VERSION}"
echo "  COMMIT: ${BUILD_COMMIT:0:8}"
echo "  TIMESTAMP: ${BUILD_TIMESTAMP}"
echo ""

# Deploy with Kamal, using environment variables for build args
# Kamal respects environment variables that match builder args
echo "Deploying with Kamal..."
BUILD_VERSION="${BUILD_VERSION}" \
  BUILD_COMMIT="${BUILD_COMMIT}" \
  BUILD_TIMESTAMP="${BUILD_TIMESTAMP}" \
  SOURCE_DATE_EPOCH="${SOURCE_DATE_EPOCH}" \
  OP_ACCOUNT=zajpt kamal deploy

echo ""
echo "=== Deployment Complete ==="
echo ""
echo "Waiting for service to stabilize..."
sleep 15

# Verify deployment
echo "Verifying deployment..."
RESPONSE=$(curl -s https://vpn9.com/api/v1/attestation 2>/dev/null || echo "{}")

if [ -n "$RESPONSE" ] && [ "$RESPONSE" != "{}" ]; then
  DEPLOYED_VERSION=$(echo "$RESPONSE" | jq -r '.deployment.build_version' 2>/dev/null || echo "unknown")
  DEPLOYED_COMMIT=$(echo "$RESPONSE" | jq -r '.deployment.build_commit' 2>/dev/null || echo "unknown")

  echo "Deployed version: ${DEPLOYED_VERSION}"
  echo "Deployed commit: ${DEPLOYED_COMMIT:0:8}"

  if [ "$DEPLOYED_VERSION" = "$BUILD_VERSION" ]; then
    echo ""
    echo "✅ Success! Build metadata verified."
  else
    echo ""
    echo "⚠️  Build metadata may take a moment to propagate."
  fi
fi

echo ""
echo "View at: https://vpn9.com/verify"

